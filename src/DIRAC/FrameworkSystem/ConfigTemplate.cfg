APIs
{
  Auth
  {
    Port = 8000
    # Authorization server parameters description, these settings are available by default
    # https://tools.ietf.org/html/rfc8414#section-2
    # AuthorizationServer
    # {
    #   issuer = https://marosvn32.in2p3.fr/DIRAC/auth
    # }
    # Describe DIRAC authorization clients
    # https://tools.ietf.org/html/rfc6749#section-2.1
    Clients
    {
      # DIRAC client instalation described as the public client
      DIRACCLI
      {
        client_id = type here client id
        redirect_uri = type here url for redirect
      }
      # WebAppDIRAC server instalation described as the confidential client
      WEBAPPDIRACCLI
      {
        client_id = type here client id
        client_secret = type here client secret
        redirect_uri = https://yourportaldomain/DIRAC/loginComplete
      }
    }
  }
  Proxy
  {
    Port = 8000
    # Allow download personal proxy
    downloadablePersonalProxy = True
  }
}
Services
{
  Gateway
  {
    Port = 9159
  }
  SystemAdministrator
  {
    Port = 9162
    Authorization
    {
      Default = ServiceAdministrator
      storeHostInfo = Operator
    }
  }
  ##BEGIN ProxyManager:
  # Section to describe ProxyManager service
  # https://dirac.readthedocs.org/en/latest/AdministratorGuide/Systems/Framework/ProxyManager/index.html
  ProxyManager
  {
    Port = 9152
    MaxThreads = 100
    # Flag to use myproxy server
    UseMyProxy = False
    # Description of rules for access to methods
    Authorization
    {
      Default = authenticated
      getProxy = FullDelegation
      getProxy += LimitedDelegation
      getProxy += PrivateLimitedDelegation
      getVOMSProxy = FullDelegation
      getVOMSProxy += LimitedDelegation
      getVOMSProxy += PrivateLimitedDelegation
      getProxyWithToken = FullDelegation
      getProxyWithToken += LimitedDelegation
      getProxyWithToken += PrivateLimitedDelegation
      getVOMSProxyWithToken = FullDelegation
      getVOMSProxyWithToken += LimitedDelegation
      getVOMSProxyWithToken += PrivateLimitedDelegation
      getLogContents = ProxyManagement
      setPersistency = ProxyManagement
    }
  }
  ##END
  ##BEGIN AuthManager:
  # Section to describe AuthManager service
  TokenManager
  {
    CheckIn
    {
      client_id = type client id here receved after client registration
      client_secret = type client secret here receved after client registration
      redirect_uri = https://yourdomain/DIRAC/auth/redirect
    }
    Port = 9151
    Authorization
    {
      Default = authenticated
    }
  }
  ##END
  SecurityLogging
  {
    Port = 9153
    Authorization
    {
      Default = authenticated
    }
  }
  UserProfileManager
  {
    Port = 9155
    Authorization
    {
      Default = authenticated
    }
  }
  Plotting
  {
    Port = 9157
    PlotsLocation = data/plots
    Authorization
    {
      Default = authenticated
      FileTransfer
      {
        Default = authenticated
      }
    }
  }
  BundleDelivery
  {
    Port = 9158
    Authorization
    {
      Default = authenticated
      FileTransfer
      {
        Default = authenticated
      }
    }
  }
  Monitoring
  {
    Port = 9142
    Authorization
    {
      Default = authenticated
      FileTransfer
      {
        Default = authenticated
      }
      queryField = ServiceAdministrator
      tryView = ServiceAdministrator
      saveView = ServiceAdministrator
      deleteView = ServiceAdministrator
      deleteActivity = ServiceAdministrator
      deleteActivities = ServiceAdministrator
      deleteViews = ServiceAdministrator
    }
  }
  Notification
  {
    Port = 9154
    SMSSwitch = sms.switch.ch
    Authorization
    {
      Default = AlarmsManagement
      sendMail = authenticated
      sendSMS = authenticated
      removeNotificationsForUser = authenticated
      markNotificationsAsRead = authenticated
      getNotifications = authenticated
      ping = authenticated
    }
  }
  ComponentMonitoring
  {
    Port = 9190
    Authorization
    {
      Default = ServiceAdministrator
      componentExists = authenticated
      getComponents = authenticated
      hostExists = authenticated
      getHosts = authenticated
      installationExists = authenticated
      getInstallations = authenticated
      updateLog = Operator
    }
  }
  RabbitMQSync
  {
    Port = 9192
    Authorization
    {
      Default = Operator
    }
  }
}
Agents
{
  MyProxyRenewalAgent
  {
    PollingTime = 1800
    MinValidity = 10000
    #The period for which the proxy will be extended. The value is in hours
    ValidityPeriod = 15
  }
  CAUpdateAgent
  {
    PollingTime = 21600
  }
}
