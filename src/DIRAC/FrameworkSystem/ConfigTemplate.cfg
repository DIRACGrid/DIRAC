APIs
{
  ##BEGIN Auth:
  # Section to describe RESTful API for DIRAC Authorization Server(AS)
  Auth
  {
    Port = 8000
    # Allow download personal proxy. By default: True
    allowProxyDownload = True
  }
  ##END
}
Services
{
  Gateway
  {
    Port = 9159
  }
  SystemAdministrator
  {
    Port = 9162
    Authorization
    {
      Default = ServiceAdministrator
      storeHostInfo = Operator
    }
  }
  ##BEGIN TokenManager:
  # Section to describe TokenManager system
  TokenManager
  {
    Protocol = https
    # Description of rules for access to methods
    Authorization
    {
      # Settings by default:
      Default = authenticated
      getUsersTokensInfo = ProxyManagement
    }
  }
  ##END
  ##BEGIN ProxyManager:
  # Section to describe ProxyManager system
  # https://dirac.readthedocs.org/en/latest/AdministratorGuide/Systems/Framework/ProxyManager/index.html
  ProxyManager
  {
    Port = 9152
    MaxThreads = 100
    # Flag to use myproxy server
    UseMyProxy = False
    # Email to use as a sender for the expiration reminder
    MailFrom = "proxymanager@diracgrid.org"
    # Description of rules for access to methods
    Authorization
    {
      Default = authenticated
      getProxy = FullDelegation
      getProxy += LimitedDelegation
      getProxy += PrivateLimitedDelegation
      getVOMSProxy = FullDelegation
      getVOMSProxy += LimitedDelegation
      getVOMSProxy += PrivateLimitedDelegation
      getProxyWithToken = FullDelegation
      getProxyWithToken += LimitedDelegation
      getProxyWithToken += PrivateLimitedDelegation
      getVOMSProxyWithToken = FullDelegation
      getVOMSProxyWithToken += LimitedDelegation
      getVOMSProxyWithToken += PrivateLimitedDelegation
      getLogContents = ProxyManagement
      setPersistency = ProxyManagement
    }
  }
  ##END
  ##BEGIN TornadoProxyManager:
  # Section to describe ProxyManager system
  # https://dirac.readthedocs.org/en/latest/AdministratorGuide/Systems/Framework/ProxyManager/index.html
  TornadoProxyManager
  {
    Protocol = https
    # Flag to use myproxy server
    UseMyProxy = False
    # Email to use as a sender for the expiration reminder
    MailFrom = "proxymanager@diracgrid.org"
    # Description of rules for access to methods
    Authorization
    {
      Default = authenticated
      getProxy = FullDelegation
      getProxy += LimitedDelegation
      getProxy += PrivateLimitedDelegation
      getVOMSProxy = FullDelegation
      getVOMSProxy += LimitedDelegation
      getVOMSProxy += PrivateLimitedDelegation
      getProxyWithToken = FullDelegation
      getProxyWithToken += LimitedDelegation
      getProxyWithToken += PrivateLimitedDelegation
      getVOMSProxyWithToken = FullDelegation
      getVOMSProxyWithToken += LimitedDelegation
      getVOMSProxyWithToken += PrivateLimitedDelegation
      getLogContents = ProxyManagement
      setPersistency = ProxyManagement
    }
  }
  ##END
  SecurityLogging
  {
    Port = 9153
    # Directory where log info is kept
    DataLocation = data/securityLog
    Authorization
    {
      Default = authenticated
    }
  }
  UserProfileManager
  {
    Port = 9155
    Authorization
    {
      Default = authenticated
    }
  }
  BundleDelivery
  {
    Port = 9158
    Authorization
    {
      Default = authenticated
      FileTransfer
      {
        Default = authenticated
      }
    }
  }
  TornadoBundleDelivery
  {
    Protocol = https
    Authorization
    {
      Default = authenticated
      FileTransfer
      {
        Default = authenticated
      }
    }
  }
  Notification
  {
    Port = 9154
    SMSSwitch = sms.switch.ch
    Authorization
    {
      Default = AlarmsManagement
      sendMail = authenticated
      sendSMS = authenticated
      removeNotificationsForUser = authenticated
      markNotificationsAsRead = authenticated
      getNotifications = authenticated
      ping = authenticated
    }
  }
  ComponentMonitoring
  {
    Port = 9190
    Authorization
    {
      Default = ServiceAdministrator
      componentExists = authenticated
      getComponents = authenticated
      hostExists = authenticated
      getHosts = authenticated
      installationExists = authenticated
      getInstallations = authenticated
      updateLog = Operator
    }
  }
  RabbitMQSync
  {
    Port = 9192
    Authorization
    {
      Default = Operator
    }
  }
}
Agents
{
  ##BEGIN ProxyRenewalAgent
  ProxyRenewalAgent
  {
    PollingTime = 900
    # Email to use as a sender for the expiration reminder
    MailFrom = proxymanager@diracgrid.org
    # Renew, or not, the proxies stored on the MyProxy service
    UseMyProxy = False
    MinimumLifeTime = 3600
    RenewedLifeTime = 54000
  }
  ##END
  CAUpdateAgent
  {
    PollingTime = 21600
  }
  ##BEGIN ComponentSupervisionAgent
  ComponentSupervisionAgent
  {
    #Time in seconds between start of cycles
    PollingTime = 600
    # Overall enable or disable
    EnableFlag = False
    # Email addresses receiving notifications
    MailTo =
    # Sender email address
    MailFrom =
    # If True automatically restart stuck agents
    RestartAgents = False
    # if True automatically restart stuck services
    RestartServices = False
    # if True automatically restart stuck executors
    RestartExecutors = False
    # if True automatically start or stop components based on host configuration
    ControlComponents = False
    # if True automatically add or remove service URLs
    CommitURLs = False
    # list of pattern in instances to disable restart for them
    DoNotRestartInstancePattern = RequestExecutingAgent
  }
  ##END
}
